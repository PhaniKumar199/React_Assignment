{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactFigmaFoodPage\\\\new\\\\src\\\\FigmaFoodHub\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './reset.css';\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handlePasswordReset = () => {\r\n    \r\n    navigate(\"/VerificationCode\"); \r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <button className=\"back-button\" onClick={handlePasswordReset}>←</button>\r\n      <h1>Reset Password</h1>\r\n      <p>Please enter your email address to request a password reset</p>\r\n      <input\r\n        type=\"email\"\r\n        className=\"email-input\"\r\n        placeholder=\"prelookstudio@gmail.com\"\r\n        defaultValue=\"prelookstudio@gmail.com\"\r\n        readOnly\r\n      />\r\n      <button className=\"send-button\">\r\n        SEND NEW PASSWORD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;*/\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './reset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleInputChange = event => {\n    setEmail(event.target.value);\n    setError(\"\"); // Clear the error when the user types\n  };\n  const handlePasswordReset = () => {\n    // Check if email is entered\n    if (!email) {\n      setError(\"Please enter an email address.\");\n      return;\n    }\n\n    // Simple email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    // Navigate to the next page if valid\n    navigate(\"/VerificationCode\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter your email address to request a password reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"email-input\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-button\",\n      onClick: handlePasswordReset,\n      children: \"SEND NEW PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"h7luClSaUSV5/Ypz5oeCADQAceg=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","error","setError","navigate","handleInputChange","event","target","value","handlePasswordReset","emailRegex","test","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactFigmaFoodPage/new/src/FigmaFoodHub/ResetPassword.jsx"],"sourcesContent":["/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './reset.css';\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handlePasswordReset = () => {\r\n    \r\n    navigate(\"/VerificationCode\"); \r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <button className=\"back-button\" onClick={handlePasswordReset}>←</button>\r\n      <h1>Reset Password</h1>\r\n      <p>Please enter your email address to request a password reset</p>\r\n      <input\r\n        type=\"email\"\r\n        className=\"email-input\"\r\n        placeholder=\"prelookstudio@gmail.com\"\r\n        defaultValue=\"prelookstudio@gmail.com\"\r\n        readOnly\r\n      />\r\n      <button className=\"send-button\">\r\n        SEND NEW PASSWORD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;*/\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './reset.css';\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (event) => {\r\n    setEmail(event.target.value);\r\n    setError(\"\"); // Clear the error when the user types\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n    // Check if email is entered\r\n    if (!email) {\r\n      setError(\"Please enter an email address.\");\r\n      return;\r\n    }\r\n\r\n    // Simple email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n\r\n    // Navigate to the next page if valid\r\n    navigate(\"/VerificationCode\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <button className=\"back-button\" onClick={() => navigate(-1)}>←</button>\r\n      <h1>Reset Password</h1>\r\n      <p>Please enter your email address to request a password reset</p>\r\n      <input\r\n        type=\"email\"\r\n        className=\"email-input\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={handleInputChange}\r\n      />\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <button className=\"send-button\" onClick={handlePasswordReset}>\r\n        SEND NEW PASSWORD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5BL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,IAAI,CAACT,KAAK,EAAE;MACVG,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACF;;IAEA;IACA,MAAMO,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACX,KAAK,CAAC,EAAE;MAC3BG,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;;IAEA;IACAC,QAAQ,CAAC,mBAAmB,CAAC;EAC/B,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvChB,OAAA;MAAQe,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAAS,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvErB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAAgB,QAAA,EAAG;IAA2D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClErB,OAAA;MACEsB,IAAI,EAAC,OAAO;MACZP,SAAS,EAAC,aAAa;MACvBQ,WAAW,EAAC,kBAAkB;MAC9BZ,KAAK,EAAER,KAAM;MACbqB,QAAQ,EAAEhB;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDhB,KAAK,iBAAIL,OAAA;MAAGe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEX;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDrB,OAAA;MAAQe,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEL,mBAAoB;MAAAI,QAAA,EAAC;IAE9D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnB,EAAA,CA9CID,aAAa;EAAA,QAGAH,WAAW;AAAA;AAAA2B,EAAA,GAHxBxB,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}