{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactFigmaFoodPage\\\\new\\\\src\\\\FigmaFoodHub\\\\VerificationCode.jsx\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\n\r\nimport './index4verify.css';\r\nconst VerificationCode = () => {\r\n  const inputs = [1, 2, 3, 4]; \r\n\r\n  return (\r\n    <div className=\"simple-verification-container\">\r\n        <button className='circle'></button>\r\n        <button className='circles'></button>\r\n      <h1>Verification Code</h1>\r\n      <p>Please type the verification code sent to your email@example.com</p>\r\n      <div className=\"simple-code-inputs\">\r\n        {inputs.map((_, index) => (\r\n          <input\r\n            key={index}\r\n            className=\"simple-code-input\"\r\n            type=\"text\"\r\n            maxLength=\"1\"\r\n            placeholder=\"•\"\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"simple-resend-text\">\r\n        I don’t receive a code!{\" \"}\r\n        <span className=\"simple-resend-link\">Please resend</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationCode;*/\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './index4verify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerificationCode = () => {\n  _s();\n  const navigate = useNavigate();\n  const [code, setCode] = useState([\"\", \"\", \"\", \"\"]);\n  const handleInputChange = (e, index) => {\n    const newCode = [...code];\n    newCode[index] = e.target.value;\n    setCode(newCode);\n\n    // Navigate when all inputs are filled\n    if (newCode.every(char => char)) {\n      navigate(\"/next-page\"); // Replace with your target route\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-verification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please type the verification code sent to your email@example.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-code-inputs\",\n      children: code.map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"simple-code-input\",\n        type: \"text\",\n        maxLength: \"1\",\n        placeholder: \"\\u2022\",\n        onChange: e => handleInputChange(e, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"simple-resend-text\",\n      children: [\"I don\\u2019t receive a code!\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"simple-resend-link\",\n        children: \"Please resend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VerificationCode, \"eYCXqde4P15/xcwQVWsTB3R9oi8=\", false, function () {\n  return [useNavigate];\n});\n_c = VerificationCode;\nexport default VerificationCode;\nvar _c;\n$RefreshReg$(_c, \"VerificationCode\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","VerificationCode","_s","navigate","code","setCode","handleInputChange","e","index","newCode","target","value","every","char","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","type","maxLength","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactFigmaFoodPage/new/src/FigmaFoodHub/VerificationCode.jsx"],"sourcesContent":["/*import React from \"react\";\r\n\r\nimport './index4verify.css';\r\nconst VerificationCode = () => {\r\n  const inputs = [1, 2, 3, 4]; \r\n\r\n  return (\r\n    <div className=\"simple-verification-container\">\r\n        <button className='circle'></button>\r\n        <button className='circles'></button>\r\n      <h1>Verification Code</h1>\r\n      <p>Please type the verification code sent to your email@example.com</p>\r\n      <div className=\"simple-code-inputs\">\r\n        {inputs.map((_, index) => (\r\n          <input\r\n            key={index}\r\n            className=\"simple-code-input\"\r\n            type=\"text\"\r\n            maxLength=\"1\"\r\n            placeholder=\"•\"\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"simple-resend-text\">\r\n        I don’t receive a code!{\" \"}\r\n        <span className=\"simple-resend-link\">Please resend</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationCode;*/\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './index4verify.css';\r\n\r\nconst VerificationCode = () => {\r\n  const navigate = useNavigate();\r\n  const [code, setCode] = useState([\"\", \"\", \"\", \"\"]);\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const newCode = [...code];\r\n    newCode[index] = e.target.value;\r\n\r\n    setCode(newCode);\r\n\r\n    // Navigate when all inputs are filled\r\n    if (newCode.every((char) => char)) {\r\n      navigate(\"/next-page\"); // Replace with your target route\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"simple-verification-container\">\r\n      <h1>Verification Code</h1>\r\n      <p>Please type the verification code sent to your email@example.com</p>\r\n      <div className=\"simple-code-inputs\">\r\n        {code.map((_, index) => (\r\n          <input\r\n            key={index}\r\n            className=\"simple-code-input\"\r\n            type=\"text\"\r\n            maxLength=\"1\"\r\n            placeholder=\"•\"\r\n            onChange={(e) => handleInputChange(e, index)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"simple-resend-text\">\r\n        I don’t receive a code!{\" \"}\r\n        <span className=\"simple-resend-link\">Please resend</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationCode;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAElD,MAAMS,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACtC,MAAMC,OAAO,GAAG,CAAC,GAAGL,IAAI,CAAC;IACzBK,OAAO,CAACD,KAAK,CAAC,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK;IAE/BN,OAAO,CAACI,OAAO,CAAC;;IAEhB;IACA,IAAIA,OAAO,CAACG,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAAC,EAAE;MACjCV,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC5Cf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAAe,QAAA,EAAG;IAAgE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvEnB,OAAA;MAAKc,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCX,IAAI,CAACgB,GAAG,CAAC,CAACC,CAAC,EAAEb,KAAK,kBACjBR,OAAA;QAEEc,SAAS,EAAC,mBAAmB;QAC7BQ,IAAI,EAAC,MAAM;QACXC,SAAS,EAAC,GAAG;QACbC,WAAW,EAAC,QAAG;QACfC,QAAQ,EAAGlB,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAEC,KAAK;MAAE,GALxCA,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAGc,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,8BACT,EAAC,GAAG,eAC3Bf,OAAA;QAAMc,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,gBAAgB;EAAA,QACHH,WAAW;AAAA;AAAA4B,EAAA,GADxBzB,gBAAgB;AAwCtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}