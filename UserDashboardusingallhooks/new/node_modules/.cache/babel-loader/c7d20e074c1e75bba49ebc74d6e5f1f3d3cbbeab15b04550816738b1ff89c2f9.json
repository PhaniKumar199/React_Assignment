{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\UserDashboardusingallhooks\\\\new\\\\src\\\\UserDashboard\\\\SearchUser.jsx\",\n  _s = $RefreshSig$();\n/*import { useContext } from \"react\";\r\nimport dashBoard from \"../UseContext/UseContext\";\r\nconst SearchUser=()=>{\r\n    const {search,setSearch}=useContext(dashBoard)\r\n    return(\r\n        <div>\r\n          <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchUser;*/\n\nimport { useContext, useRef } from \"react\";\nimport dashBoard from \"../UseContext/UseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchUser = () => {\n  _s();\n  const {\n    setSearch\n  } = useContext(dashBoard);\n  const inputRef = useRef(null); // Create a ref for the input element\n\n  const handleSearchChange = () => {\n    if (inputRef.current) {\n      setSearch(inputRef.current.value); // Set search value from inputRef\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef // Attach ref to the input element\n        ,\n        type: \"text\",\n        placeholder: \"Search by name\",\n        onChange: handleSearchChange // Update the search value when input changes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchUser, \"C0oZYXY6plYchJBBcM1LaEoSchg=\");\n_c = SearchUser;\nexport default SearchUser;\nvar _c;\n$RefreshReg$(_c, \"SearchUser\");","map":{"version":3,"names":["useContext","useRef","dashBoard","jsxDEV","_jsxDEV","SearchUser","_s","setSearch","inputRef","handleSearchChange","current","value","children","ref","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/UserDashboardusingallhooks/new/src/UserDashboard/SearchUser.jsx"],"sourcesContent":["/*import { useContext } from \"react\";\r\nimport dashBoard from \"../UseContext/UseContext\";\r\nconst SearchUser=()=>{\r\n    const {search,setSearch}=useContext(dashBoard)\r\n    return(\r\n        <div>\r\n          <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchUser;*/\r\n\r\nimport { useContext, useRef } from \"react\";\r\nimport dashBoard from \"../UseContext/UseContext\";\r\n\r\nconst SearchUser = () => {\r\n  const { setSearch } = useContext(dashBoard);\r\n  const inputRef = useRef(null); // Create a ref for the input element\r\n\r\n  const handleSearchChange = () => {\r\n    if (inputRef.current) {\r\n      setSearch(inputRef.current.value); // Set search value from inputRef\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          ref={inputRef} // Attach ref to the input element\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          onChange={handleSearchChange} // Update the search value when input changes\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchUser;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAU,CAAC,GAAGP,UAAU,CAACE,SAAS,CAAC;EAC3C,MAAMM,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAID,QAAQ,CAACE,OAAO,EAAE;MACpBH,SAAS,CAACC,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;IACrC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA;MAAAQ,QAAA,eACER,OAAA;QACES,GAAG,EAAEL,QAAS,CAAC;QAAA;QACfM,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ,EAAEP,kBAAmB,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}