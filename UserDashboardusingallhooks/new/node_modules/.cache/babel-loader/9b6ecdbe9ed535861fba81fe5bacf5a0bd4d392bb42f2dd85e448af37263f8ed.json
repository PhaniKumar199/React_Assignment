{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\UserDashboardusingallhooks\\\\new\\\\src\\\\UserDashboard\\\\UserDashboard.jsx\",\n  _s = $RefreshSig$();\n/*import { useEffect, useState } from \"react\";\r\nimport './index.css';\r\nconst UserDashboard=()=>{\r\n    const [data,setData]=useState([])\r\n    const [error,setError]=useState('')\r\n    //const [unputText,setInputText]=useState([]);\r\n    useEffect(()=>{\r\n            fetch('./data.json')\r\n            .then(response=>response.json())\r\n            .then(json=>setData(json))\r\n            .catch(error=>setError(\"Failed to load data\"))\r\n    },[])\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Search here\"/>\r\n                <button>Add</button>\r\n            </div>\r\n            <div className=\"cards\">\r\n           {data.map((item,index)=>(\r\n            <div className=\"card\" key={index}>\r\n                <h1>{item.name}</h1>\r\n                <h1>{item.title}</h1>\r\n                <h1>{item.description}</h1>\r\n                <h1>{item.status}</h1>\r\n                <button>Edit</button>\r\n                <button>Delete</button>\r\n            </div>\r\n           ))}\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserDashboard;*/\n\nimport { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\"); // State to track input value\n\n  useEffect(() => {\n    fetch(\"./data.json\").then(response => response.json()).then(json => setData(json)).catch(() => setError(\"Failed to load data\"));\n  }, []);\n  const handleAdd = () => {\n    if (inputText.trim() !== \"\") {\n      const newCard = {\n        name: inputText,\n        title: \"Default Title\",\n        // Customize as needed\n        description: \"Default Description\",\n        // Customize as needed\n        status: \"Active\" // Customize as needed\n      };\n      setData([...data, newCard]); // Add the new card to the list\n      setInputText(\"\"); // Clear the input\n    }\n  };\n  const handleDelete = index => {\n    const updatedData = data.filter((_, i) => i !== index);\n    setData(updatedData); // Update the state with the filtered data\n  };\n  const handleEdit = index => {\n    const newTitle = prompt(\"Enter new title:\", data[index].title);\n    if (newTitle !== null && newTitle.trim() !== \"\") {\n      const updatedData = data.map((item, i) => i === index ? {\n        ...item,\n        title: newTitle\n      } : item);\n      setData(updatedData); // Update the state with the edited data\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter name\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"X3R5lb60B5bJ0LNI43428ntDmzI=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","UserDashboard","_s","data","setData","error","setError","inputText","setInputText","fetch","then","response","json","catch","handleAdd","trim","newCard","name","title","description","status","handleDelete","index","updatedData","filter","_","i","handleEdit","newTitle","prompt","map","item","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/UserDashboardusingallhooks/new/src/UserDashboard/UserDashboard.jsx"],"sourcesContent":["/*import { useEffect, useState } from \"react\";\r\nimport './index.css';\r\nconst UserDashboard=()=>{\r\n    const [data,setData]=useState([])\r\n    const [error,setError]=useState('')\r\n    //const [unputText,setInputText]=useState([]);\r\n    useEffect(()=>{\r\n            fetch('./data.json')\r\n            .then(response=>response.json())\r\n            .then(json=>setData(json))\r\n            .catch(error=>setError(\"Failed to load data\"))\r\n    },[])\r\n    if(error){\r\n        return <h1>{error}</h1>\r\n    }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Search here\"/>\r\n                <button>Add</button>\r\n            </div>\r\n            <div className=\"cards\">\r\n           {data.map((item,index)=>(\r\n            <div className=\"card\" key={index}>\r\n                <h1>{item.name}</h1>\r\n                <h1>{item.title}</h1>\r\n                <h1>{item.description}</h1>\r\n                <h1>{item.status}</h1>\r\n                <button>Edit</button>\r\n                <button>Delete</button>\r\n            </div>\r\n           ))}\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserDashboard;*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst UserDashboard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [inputText, setInputText] = useState(\"\"); // State to track input value\r\n\r\n  useEffect(() => {\r\n    fetch(\"./data.json\")\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch(() => setError(\"Failed to load data\"));\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    if (inputText.trim() !== \"\") {\r\n      const newCard = {\r\n        name: inputText,\r\n        title: \"Default Title\", // Customize as needed\r\n        description: \"Default Description\", // Customize as needed\r\n        status: \"Active\", // Customize as needed\r\n      };\r\n      setData([...data, newCard]); // Add the new card to the list\r\n      setInputText(\"\"); // Clear the input\r\n    }\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedData = data.filter((_, i) => i !== index);\r\n    setData(updatedData); // Update the state with the filtered data\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const newTitle = prompt(\"Enter new title:\", data[index].title);\r\n    if (newTitle !== null && newTitle.trim() !== \"\") {\r\n      const updatedData = data.map((item, i) =>\r\n        i === index ? { ...item, title: newTitle } : item\r\n      );\r\n      setData(updatedData); // Update the state with the edited data\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <h1>{error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n        />\r\n        <button onClick={handleAdd}>Add</button>\r\n      </div>\r\n      <div className=\"cards\">\r\n        {data.map((item, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <h1>{item.name}</h1>\r\n            <h1>{item.title}</h1>\r\n            <h1>{item.description}</h1>\r\n            <h1>{item.status}</h1>\r\n            <button onClick={() => handleEdit(index)}>Edit</button>\r\n            <button onClick={() => handleDelete(index)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}