{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactNotesFigmaTask\\\\new\\\\src\\\\NotesFigma\\\\Home.jsx\",\n  _s = $RefreshSig$();\n/*import React from 'react'\r\nimport './index.css';\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n\r\n         <h2>Pocket Notes</h2>\r\n         <div>\r\n         <ul>\r\n            <li>My Notes</li>\r\n            <li>My personal grp</li>\r\n            <li>Javascript grp</li>\r\n            <li>HTML grp</li>\r\n            <li>Css Notes</li>\r\n            <li>SQL Notes</li>\r\n            <li>Python Notes</li>\r\n         </ul>\r\n         </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;*/\n\nimport './index.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport GroupPage from './GroupPage'; // Create a separate component for group page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [groups, setGroups] = useState([{\n    id: 1,\n    name: 'My Notes',\n    color: '#007bff'\n  }]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [groupName, setGroupName] = useState('');\n  const [selectedColor, setSelectedColor] = useState(null);\n  const colors = ['#ff6666', '#ffcc66', '#66ff66', '#66ccff', '#9966ff'];\n  const handleAddGroup = () => {\n    setShowPopup(true);\n  };\n  const handleCreateGroup = () => {\n    if (groupName && selectedColor) {\n      const newGroup = {\n        id: groups.length + 1,\n        name: groupName,\n        color: selectedColor\n      };\n      setGroups([...groups, newGroup]);\n      setGroupName('');\n      setSelectedColor(null);\n      setShowPopup(false);\n    } else {\n      alert('Please enter a group name and select a color.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"group-list\",\n          children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/group/${group.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: group.color\n                },\n                children: group.name.split(' ').map(word => word[0]).join('').toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), group.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, group.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-group-btn\",\n          onClick: handleAddGroup,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter group name\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-options\",\n          children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: color\n            },\n            className: selectedColor === color ? 'selected' : '',\n            onClick: () => setSelectedColor(color)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateGroup,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/group/:groupId\",\n        component: GroupPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ZHYOQ/1SEQs2saIoG2CMufSmISQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","GroupPage","jsxDEV","_jsxDEV","Home","_s","groups","setGroups","id","name","color","showPopup","setShowPopup","groupName","setGroupName","selectedColor","setSelectedColor","colors","handleAddGroup","handleCreateGroup","newGroup","length","alert","children","className","map","group","to","style","backgroundColor","split","word","join","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","index","path","component","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactNotesFigmaTask/new/src/NotesFigma/Home.jsx"],"sourcesContent":["/*import React from 'react'\r\nimport './index.css';\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n\r\n         <h2>Pocket Notes</h2>\r\n         <div>\r\n         <ul>\r\n            <li>My Notes</li>\r\n            <li>My personal grp</li>\r\n            <li>Javascript grp</li>\r\n            <li>HTML grp</li>\r\n            <li>Css Notes</li>\r\n            <li>SQL Notes</li>\r\n            <li>Python Notes</li>\r\n         </ul>\r\n         </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;*/\r\n\r\n\r\nimport './index.css';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport GroupPage from './GroupPage';  // Create a separate component for group page\r\n\r\nfunction Home() {\r\n  const [groups, setGroups] = useState([\r\n    { id: 1, name: 'My Notes', color: '#007bff' },\r\n  ]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState('');\r\n  const [selectedColor, setSelectedColor] = useState(null);\r\n  const colors = ['#ff6666', '#ffcc66', '#66ff66', '#66ccff', '#9966ff'];\r\n\r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    if (groupName && selectedColor) {\r\n      const newGroup = {\r\n        id: groups.length + 1,\r\n        name: groupName,\r\n        color: selectedColor,\r\n      };\r\n\r\n      setGroups([...groups, newGroup]);\r\n      setGroupName('');\r\n      setSelectedColor(null);\r\n      setShowPopup(false);\r\n    } else {\r\n      alert('Please enter a group name and select a color.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <div className=\"sidebar\">\r\n          <ul className=\"group-list\">\r\n            {groups.map((group) => (\r\n              <li key={group.id}>\r\n                <Link to={`/group/${group.id}`}>\r\n                  <span style={{ backgroundColor: group.color }}>\r\n                    {group.name\r\n                      .split(' ')\r\n                      .map((word) => word[0])\r\n                      .join('')\r\n                      .toUpperCase()}\r\n                  </span>\r\n                  {group.name}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"add-group-btn\" onClick={handleAddGroup}>\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        {showPopup && (\r\n          <div className=\"popup\">\r\n            <h3>Create New Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter group name\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n            />\r\n            <div className=\"color-options\">\r\n              {colors.map((color, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{ backgroundColor: color }}\r\n                  className={selectedColor === color ? 'selected' : ''}\r\n                  onClick={() => setSelectedColor(color)}\r\n                />\r\n              ))}\r\n            </div>\r\n            <button onClick={handleCreateGroup}>Create</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Add Routes here */}\r\n      <Switch>\r\n        <Route path=\"/group/:groupId\" component={GroupPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}