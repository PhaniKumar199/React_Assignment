{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactNotesFigmaTask\\\\new\\\\src\\\\FigmaNotes\\\\Home.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport './index.css';\r\nconst Home = () => {\r\n  \r\n  const [groups, setGroups] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n\r\n  \r\n  const handleAddGroup = () => {\r\n    setShowPopup(true); \r\n  };\r\n\r\n  \r\n  const handleCreateGroup = () => {\r\n    if (groupName) { \r\n      setGroups([...groups, groupName]); \r\n      setGroupName(\"\"); \r\n      setShowPopup(false); \r\n    } else {\r\n      alert(\"Please enter a group name.\"); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n        \r\n        <div className=\"center\">\r\n        <div className=\"cardsss\"> \r\n      \r\n        <h1>Pocket Notes</h1>\r\n     \r\n      <ul>\r\n        {groups.map((group, index) => (\r\n          <li key={index}>{group}</li> \r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"b\">\r\n      <button onClick={handleAddGroup}>+</button>\r\n      </div>\r\n      </div>\r\n      <div className=\"group\">\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <input\r\n            type=\"text\"\r\n            value={groupName}\r\n            onChange={(e) => setGroupName(e.target.value)} \r\n            placeholder=\"Enter group name\"\r\n          />\r\n          <button onClick={handleCreateGroup}>Create</button>\r\n          <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n        </div>\r\n        \r\n      )}\r\n      </div>\r\n      \r\n\r\n     \r\n      \r\n      <div className=\"cards\">\r\n        <img src=\"/assets/image-removebg-preview 1 (2).png\" alt=\"homeimage\" width={\"400px\"}/>\r\n        <h1>Pocket Notes</h1>\r\n        <p>Send and receive messages without keeping your phone online.\r\n            Use Pocket Notes on up to 4 linked devices and 1 mobile phone</p>\r\n      </div>\r\n\r\n      \r\n\r\n\r\n      </div>\r\n\r\n\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\n\n/*import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const [groups, setGroups] = useState([]); // State for groups\r\n  const [showPopup, setShowPopup] = useState(false); // State for popup visibility\r\n  const [groupName, setGroupName] = useState(\"\"); // State for group name input\r\n  const [groupColor, setGroupColor] = useState(\"#007bff\"); // State for group color\r\n\r\n  // Show popup for adding group\r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  // Handle creating a new group\r\n  const handleCreateGroup = () => {\r\n    if (groupName) {\r\n      setGroups([...groups, { name: groupName, color: groupColor }]); // Add new group with name and color\r\n      setGroupName(\"\");\r\n      setGroupColor(\"#007bff\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name.\"); // Alert if group name is empty\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"center\">\r\n        <div className=\"sidebar\">\r\n          <h1>Pocket Notes</h1>\r\n          <ul>\r\n            {groups.map((group, index) => (\r\n              <li\r\n                key={index}\r\n                style={{ backgroundColor: group.color }}\r\n                className=\"group-item\"\r\n              >\r\n                {group.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"add-btn\" onClick={handleAddGroup}>\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"main-content\">\r\n          <img\r\n            src=\"/assets/image-removebg-preview 1 (2).png\"\r\n            alt=\"homeimage\"\r\n            width={\"400px\"}\r\n          />\r\n          <h1>Pocket Notes</h1>\r\n          <p>\r\n            Send and receive messages without keeping your phone online. Use\r\n            Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      /*{showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create a Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder=\"Enter group name\"\r\n            />\r\n            <label>Select Color:</label>\r\n            <input\r\n              type=\"color\"\r\n              value={groupColor}\r\n              onChange={(e) => setGroupColor(e.target.value)}\r\n            />\r\n            <div className=\"popup-actions\">\r\n              <button onClick={handleCreateGroup}>Create</button>\r\n              <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\n\n/*import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const [groups, setGroups] = useState([\r\n    { name: \"My Notes\", color: \"#007bff\" },\r\n    { name: \"My personal grp\", color: \"#9b59b6\" },\r\n    { name: \"Javascript grp\", color: \"#f39c12\" },\r\n    { name: \"HTML grp\", color: \"#1abc9c\" },\r\n    { name: \"CSS Notes\", color: \"#d35400\" },\r\n    { name: \"SQL Notes\", color: \"#3498db\" },\r\n    { name: \"Python Notes\", color: \"#8e44ad\" },\r\n  ]); // Default groups\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [groupColor, setGroupColor] = useState(\"#007bff\");\r\n\r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    if (groupName) {\r\n      setGroups([...groups, { name: groupName, color: groupColor }]);\r\n      setGroupName(\"\");\r\n      setGroupColor(\"#007bff\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      /*<div className=\"sidebar\">\r\n        <ul>\r\n          {groups.map((group, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"group-item\"\r\n              style={{ backgroundColor: group.color }}\r\n            >\r\n              {group.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button className=\"add-btn\" onClick={handleAddGroup}>\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"illustration\">\r\n          <img\r\n            src=\"/assets/image-removebg-preview 1 (2).png\"\r\n            alt=\"Illustration\"\r\n            width=\"400px\"\r\n          />\r\n        </div>\r\n        <h1>Pocket Notes</h1>\r\n        <p>\r\n          Send and receive messages without keeping your phone online. Use\r\n          Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n        </p>\r\n        <p className=\"encryption-note\">ðŸ”’ End-to-end encrypted</p>\r\n      </div>\r\n\r\n     \r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create a Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder=\"Enter group name\"\r\n            />\r\n            <label>Select Color:</label>\r\n            <input\r\n              type=\"color\"\r\n              value={groupColor}\r\n              onChange={(e) => setGroupColor(e.target.value)}\r\n            />\r\n            <div className=\"popup-actions\">\r\n              <button onClick={handleCreateGroup}>Create</button>\r\n              <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showPopup, setShowPopup] = useState(false);\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupColor, setGroupColor] = useState(\"#007bff\");\n  const groups = [{\n    name: \"My Notes\",\n    color: \"#007bff\"\n  }, {\n    name: \"My personal grp\",\n    color: \"#9b59b6\"\n  }, {\n    name: \"Javascript grp\",\n    color: \"#f39c12\"\n  }, {\n    name: \"HTML grp\",\n    color: \"#1abc9c\"\n  }, {\n    name: \"CSS Notes\",\n    color: \"#d35400\"\n  }, {\n    name: \"SQL Notes\",\n    color: \"#3498db\"\n  }, {\n    name: \"Python Notes\",\n    color: \"#8e44ad\"\n  }];\n  const handleGroupClick = name => {\n    navigate(`/group/${name}`);\n  };\n  const handleCreateGroup = () => {\n    if (groupName) {\n      groups.push({\n        name: groupName,\n        color: groupColor\n      });\n      setGroupName(\"\");\n      setGroupColor(\"#007bff\");\n      setShowPopup(false);\n    } else {\n      alert(\"Please enter a group name.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"group-item\",\n          style: {\n            backgroundColor: group.color\n          },\n          onClick: () => handleGroupClick(group.name),\n          children: group.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: () => setShowPopup(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"illustration\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/image-removebg-preview 1 (2).png\",\n          alt: \"Illustration\",\n          width: \"400px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Send and receive messages without keeping your phone online. Use Pocket Notes on up to 4 linked devices and 1 mobile phone.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"encryption-note\",\n        children: \"\\uD83D\\uDD12 End-to-end encrypted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create a Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value),\n          placeholder: \"Enter group name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupColor(\"#007bff\"),\n            style: {\n              backgroundColor: \"#007bff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupColor(\"#9b59b6\"),\n            style: {\n              backgroundColor: \"#9b59b6\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupColor(\"#f39c12\"),\n            style: {\n              backgroundColor: \"#f39c12\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupColor(\"#1abc9c\"),\n            style: {\n              backgroundColor: \"#1abc9c\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGroupColor(\"#d35400\"),\n            style: {\n              backgroundColor: \"#d35400\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateGroup,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPopup(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"dHBYLI7LsQebPv4DfQH5Sh6c3Wc=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","navigate","showPopup","setShowPopup","groupName","setGroupName","groupColor","setGroupColor","groups","name","color","handleGroupClick","handleCreateGroup","push","alert","className","children","map","group","index","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactNotesFigmaTask/new/src/FigmaNotes/Home.jsx"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport './index.css';\r\nconst Home = () => {\r\n  \r\n  const [groups, setGroups] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n\r\n  \r\n  const handleAddGroup = () => {\r\n    setShowPopup(true); \r\n  };\r\n\r\n  \r\n  const handleCreateGroup = () => {\r\n    if (groupName) { \r\n      setGroups([...groups, groupName]); \r\n      setGroupName(\"\"); \r\n      setShowPopup(false); \r\n    } else {\r\n      alert(\"Please enter a group name.\"); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n        \r\n        <div className=\"center\">\r\n        <div className=\"cardsss\"> \r\n      \r\n        <h1>Pocket Notes</h1>\r\n     \r\n      <ul>\r\n        {groups.map((group, index) => (\r\n          <li key={index}>{group}</li> \r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"b\">\r\n      <button onClick={handleAddGroup}>+</button>\r\n      </div>\r\n      </div>\r\n      <div className=\"group\">\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <input\r\n            type=\"text\"\r\n            value={groupName}\r\n            onChange={(e) => setGroupName(e.target.value)} \r\n            placeholder=\"Enter group name\"\r\n          />\r\n          <button onClick={handleCreateGroup}>Create</button>\r\n          <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n        </div>\r\n        \r\n      )}\r\n      </div>\r\n      \r\n\r\n     \r\n      \r\n      <div className=\"cards\">\r\n        <img src=\"/assets/image-removebg-preview 1 (2).png\" alt=\"homeimage\" width={\"400px\"}/>\r\n        <h1>Pocket Notes</h1>\r\n        <p>Send and receive messages without keeping your phone online.\r\n            Use Pocket Notes on up to 4 linked devices and 1 mobile phone</p>\r\n      </div>\r\n\r\n      \r\n\r\n\r\n      </div>\r\n\r\n\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\r\n\r\n/*import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const [groups, setGroups] = useState([]); // State for groups\r\n  const [showPopup, setShowPopup] = useState(false); // State for popup visibility\r\n  const [groupName, setGroupName] = useState(\"\"); // State for group name input\r\n  const [groupColor, setGroupColor] = useState(\"#007bff\"); // State for group color\r\n\r\n  // Show popup for adding group\r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  // Handle creating a new group\r\n  const handleCreateGroup = () => {\r\n    if (groupName) {\r\n      setGroups([...groups, { name: groupName, color: groupColor }]); // Add new group with name and color\r\n      setGroupName(\"\");\r\n      setGroupColor(\"#007bff\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name.\"); // Alert if group name is empty\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"center\">\r\n        <div className=\"sidebar\">\r\n          <h1>Pocket Notes</h1>\r\n          <ul>\r\n            {groups.map((group, index) => (\r\n              <li\r\n                key={index}\r\n                style={{ backgroundColor: group.color }}\r\n                className=\"group-item\"\r\n              >\r\n                {group.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"add-btn\" onClick={handleAddGroup}>\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"main-content\">\r\n          <img\r\n            src=\"/assets/image-removebg-preview 1 (2).png\"\r\n            alt=\"homeimage\"\r\n            width={\"400px\"}\r\n          />\r\n          <h1>Pocket Notes</h1>\r\n          <p>\r\n            Send and receive messages without keeping your phone online. Use\r\n            Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      /*{showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create a Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder=\"Enter group name\"\r\n            />\r\n            <label>Select Color:</label>\r\n            <input\r\n              type=\"color\"\r\n              value={groupColor}\r\n              onChange={(e) => setGroupColor(e.target.value)}\r\n            />\r\n            <div className=\"popup-actions\">\r\n              <button onClick={handleCreateGroup}>Create</button>\r\n              <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\r\n\r\n/*import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const [groups, setGroups] = useState([\r\n    { name: \"My Notes\", color: \"#007bff\" },\r\n    { name: \"My personal grp\", color: \"#9b59b6\" },\r\n    { name: \"Javascript grp\", color: \"#f39c12\" },\r\n    { name: \"HTML grp\", color: \"#1abc9c\" },\r\n    { name: \"CSS Notes\", color: \"#d35400\" },\r\n    { name: \"SQL Notes\", color: \"#3498db\" },\r\n    { name: \"Python Notes\", color: \"#8e44ad\" },\r\n  ]); // Default groups\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [groupColor, setGroupColor] = useState(\"#007bff\");\r\n\r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    if (groupName) {\r\n      setGroups([...groups, { name: groupName, color: groupColor }]);\r\n      setGroupName(\"\");\r\n      setGroupColor(\"#007bff\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      /*<div className=\"sidebar\">\r\n        <ul>\r\n          {groups.map((group, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"group-item\"\r\n              style={{ backgroundColor: group.color }}\r\n            >\r\n              {group.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button className=\"add-btn\" onClick={handleAddGroup}>\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"illustration\">\r\n          <img\r\n            src=\"/assets/image-removebg-preview 1 (2).png\"\r\n            alt=\"Illustration\"\r\n            width=\"400px\"\r\n          />\r\n        </div>\r\n        <h1>Pocket Notes</h1>\r\n        <p>\r\n          Send and receive messages without keeping your phone online. Use\r\n          Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n        </p>\r\n        <p className=\"encryption-note\">ðŸ”’ End-to-end encrypted</p>\r\n      </div>\r\n\r\n     \r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create a Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder=\"Enter group name\"\r\n            />\r\n            <label>Select Color:</label>\r\n            <input\r\n              type=\"color\"\r\n              value={groupColor}\r\n              onChange={(e) => setGroupColor(e.target.value)}\r\n            />\r\n            <div className=\"popup-actions\">\r\n              <button onClick={handleCreateGroup}>Create</button>\r\n              <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;*/\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [groupColor, setGroupColor] = useState(\"#007bff\");\r\n\r\n  const groups = [\r\n    { name: \"My Notes\", color: \"#007bff\" },\r\n    { name: \"My personal grp\", color: \"#9b59b6\" },\r\n    { name: \"Javascript grp\", color: \"#f39c12\" },\r\n    { name: \"HTML grp\", color: \"#1abc9c\" },\r\n    { name: \"CSS Notes\", color: \"#d35400\" },\r\n    { name: \"SQL Notes\", color: \"#3498db\" },\r\n    { name: \"Python Notes\", color: \"#8e44ad\" },\r\n  ];\r\n\r\n  const handleGroupClick = (name) => {\r\n    navigate(`/group/${name}`);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    if (groupName) {\r\n      groups.push({ name: groupName, color: groupColor });\r\n      setGroupName(\"\");\r\n      setGroupColor(\"#007bff\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <ul>\r\n          {groups.map((group, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"group-item\"\r\n              style={{ backgroundColor: group.color }}\r\n              onClick={() => handleGroupClick(group.name)}\r\n            >\r\n              {group.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button className=\"add-btn\" onClick={() => setShowPopup(true)}>\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"main-content\">\r\n        <div className=\"illustration\">\r\n          <img\r\n            src=\"/assets/image-removebg-preview 1 (2).png\"\r\n            alt=\"Illustration\"\r\n            width=\"400px\"\r\n          />\r\n        </div>\r\n        <h1>Pocket Notes</h1>\r\n        <p>\r\n          Send and receive messages without keeping your phone online. Use\r\n          Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n        </p>\r\n        <p className=\"encryption-note\">ðŸ”’ End-to-end encrypted</p>\r\n      </div>\r\n\r\n      {/* Popup */}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Create a Group</h3>\r\n            <input\r\n              type=\"text\"\r\n              value={groupName}\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n              placeholder=\"Enter group name\"\r\n            />\r\n            <div className=\"color-options\">\r\n              <button onClick={() => setGroupColor(\"#007bff\")} style={{ backgroundColor: \"#007bff\" }}></button>\r\n              <button onClick={() => setGroupColor(\"#9b59b6\")} style={{ backgroundColor: \"#9b59b6\" }}></button>\r\n              <button onClick={() => setGroupColor(\"#f39c12\")} style={{ backgroundColor: \"#f39c12\" }}></button>\r\n              <button onClick={() => setGroupColor(\"#1abc9c\")} style={{ backgroundColor: \"#1abc9c\" }}></button>\r\n              <button onClick={() => setGroupColor(\"#d35400\")} style={{ backgroundColor: \"#d35400\" }}></button>\r\n            </div>\r\n            <div className=\"popup-actions\">\r\n              <button onClick={handleCreateGroup}>Create</button>\r\n              <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}