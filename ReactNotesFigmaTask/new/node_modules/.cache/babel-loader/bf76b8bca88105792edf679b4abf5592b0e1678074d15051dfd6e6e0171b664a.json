{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactNotesFigmaTask\\\\new\\\\src\\\\FigmaNotes\\\\GroupDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupDetails = ({\n  groups\n}) => {\n  _s();\n  const {\n    groupName\n  } = useParams();\n  const group = groups.find(g => g.name === groupName);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSend = () => {\n    if (newMessage.trim() !== \"\") {\n      setMessages([...messages, newMessage]);\n      setNewMessage(\"\");\n    }\n  };\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"group-item\",\n          style: {\n            backgroundColor: group.color\n          },\n          children: group.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pp\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"9 Mar 2023 10:10 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pp\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"9 Mar 2023 10:10 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pp\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"9 Mar 2023 10:10 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"9 Mar 2023.10:10 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your message\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetails, \"zqDqvR1Sf/AHCLdCVc0hdRa7WLU=\", false, function () {\n  return [useParams];\n});\n_c = GroupDetails;\nexport default GroupDetails;\nvar _c;\n$RefreshReg$(_c, \"GroupDetails\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","GroupDetails","groups","_s","groupName","group","find","g","name","newMessage","setNewMessage","messages","setMessages","handleSend","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","style","backgroundColor","color","message","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactNotesFigmaTask/new/src/FigmaNotes/GroupDetails.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nconst GroupDetails = ({ groups }) => {\r\n  const { groupName } = useParams();\r\n  const group = groups.find((g) => g.name === groupName);\r\n\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = () => {\r\n    if (newMessage.trim() !== \"\") {\r\n      setMessages([...messages, newMessage]);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n\r\n  if (!group) {\r\n    return <h1>Group Not Found</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"group-details\">\r\n      <div className=\"sidebar\">\r\n        <ul>\r\n          {groups.map((group, index) => (\r\n            <li\r\n              key={index}\r\n              className=\"group-item\"\r\n              style={{ backgroundColor: group.color }}\r\n            >\r\n              {group.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"main-contents\">\r\n        <div className=\"header\">\r\n          <h2>{group.name}</h2>\r\n        </div>\r\n        \r\n        <div className=\"pp\">\r\n           <p>Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.</p>\r\n           <span>9 Mar 2023 10:10 AM</span>\r\n        </div>\r\n        \r\n\r\n        <div className=\"pp\">\r\n           <p>Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.</p>\r\n           <span>9 Mar 2023 10:10 AM</span>\r\n        </div>\r\n\r\n        \r\n        <div className=\"pp\">\r\n           <p>Another productive way to use this tool to begin a daily writing routine. One way is to generate a random paragraph with the intention to try to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.</p>\r\n           <span>9 Mar 2023 10:10 AM</span>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"messages\">\r\n          {messages.map((message, index) => (\r\n            <p key={index}>\r\n              {message}\r\n              <br />\r\n              <span>9 Mar 2023.10:10 AM</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your message\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n          />\r\n          <button onClick={handleSend}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}