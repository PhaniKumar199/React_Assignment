{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactNotesFigmaTask\\\\new\\\\src\\\\NotesFigma\\\\GroupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupPage = () => {\n  _s();\n  const {\n    groupId\n  } = useParams(); // Get the group id from the URL\n  const history = useHistory();\n  const [group, setGroup] = useState(null);\n  const [paragraphs, setParagraphs] = useState([]);\n  const [newParagraph, setNewParagraph] = useState('');\n  useEffect(() => {\n    // Fetch group details and paragraphs (you could replace with an API call)\n    const groupDetails = {\n      id: groupId,\n      name: `Group ${groupId}`\n    };\n    setGroup(groupDetails);\n  }, [groupId]);\n  const handleAddParagraph = () => {\n    if (newParagraph) {\n      setParagraphs([...paragraphs, newParagraph]);\n      setNewParagraph('');\n    } else {\n      alert('Please enter some text.');\n    }\n  };\n  const handleBack = () => {\n    history.push('/'); // Navigate back to the home page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: group ? group.name : 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paragraph-list\",\n      children: paragraphs.length > 0 ? paragraphs.map((para, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: para\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No paragraphs yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newParagraph,\n        onChange: e => setNewParagraph(e.target.value),\n        placeholder: \"Type a paragraph...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddParagraph,\n        children: \"Add Paragraph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupPage, \"oCZ+4itl2Ao6CY/jMIGbb4ek8pY=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","jsxDEV","_jsxDEV","GroupPage","_s","groupId","history","group","setGroup","paragraphs","setParagraphs","newParagraph","setNewParagraph","groupDetails","id","name","handleAddParagraph","alert","handleBack","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","para","index","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactNotesFigmaTask/new/src/NotesFigma/GroupPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst GroupPage = () => {\r\n  const { groupId } = useParams(); // Get the group id from the URL\r\n  const history = useHistory();\r\n  const [group, setGroup] = useState(null);\r\n  const [paragraphs, setParagraphs] = useState([]);\r\n  const [newParagraph, setNewParagraph] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch group details and paragraphs (you could replace with an API call)\r\n    const groupDetails = {\r\n      id: groupId,\r\n      name: `Group ${groupId}`,\r\n    };\r\n\r\n    setGroup(groupDetails);\r\n  }, [groupId]);\r\n\r\n  const handleAddParagraph = () => {\r\n    if (newParagraph) {\r\n      setParagraphs([...paragraphs, newParagraph]);\r\n      setNewParagraph('');\r\n    } else {\r\n      alert('Please enter some text.');\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.push('/'); // Navigate back to the home page\r\n  };\r\n\r\n  return (\r\n    <div className=\"group-page\">\r\n      <h2>{group ? group.name : 'Loading...'}</h2>\r\n\r\n      <div className=\"paragraph-list\">\r\n        {paragraphs.length > 0 ? (\r\n          paragraphs.map((para, index) => <p key={index}>{para}</p>)\r\n        ) : (\r\n          <p>No paragraphs yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"input-section\">\r\n        <textarea\r\n          value={newParagraph}\r\n          onChange={(e) => setNewParagraph(e.target.value)}\r\n          placeholder=\"Type a paragraph...\"\r\n        ></textarea>\r\n        <button onClick={handleAddParagraph}>Add Paragraph</button>\r\n      </div>\r\n\r\n      <button onClick={handleBack}>Back to Home</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}