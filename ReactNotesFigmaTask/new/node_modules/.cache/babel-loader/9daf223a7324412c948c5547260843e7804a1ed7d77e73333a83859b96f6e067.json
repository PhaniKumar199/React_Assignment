{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\ReactNotesFigmaTask\\\\new\\\\src\\\\FigmaNotes\\\\GroupDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupDetails = () => {\n  _s();\n  const {\n    groupName\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Another productive way to use this tool is to begin a daily writing routine. One way is to generate a random paragraph with the intention to rewrite it while still keeping the original meaning. The purpose here is to just get the writing started so that when the writer goes onto their day's writing projects, words are already flowing from their fingers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timestamp\",\n        children: \"9 Mar 2023 \\u2022 10:10 AM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Here's the sample text for sample work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetails, \"k0ijay+4gTmhd+CXx0hOwnbLC1o=\", false, function () {\n  return [useParams];\n});\n_c = GroupDetails;\nexport default GroupDetails;\nvar _c;\n$RefreshReg$(_c, \"GroupDetails\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","GroupDetails","_s","groupName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/ReactNotesFigmaTask/new/src/FigmaNotes/GroupDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nconst GroupDetails = () => {\r\n  const { groupName } = useParams();\r\n\r\n  return (\r\n    <div className=\"group-details\">\r\n      <div className=\"header\">\r\n        <h2>{groupName}</h2>\r\n      </div>\r\n      <div className=\"messages\">\r\n        <p>\r\n          Another productive way to use this tool is to begin a daily writing\r\n          routine. One way is to generate a random paragraph with the intention\r\n          to rewrite it while still keeping the original meaning. The purpose\r\n          here is to just get the writing started so that when the writer goes\r\n          onto their day's writing projects, words are already flowing from\r\n          their fingers.\r\n        </p>\r\n        <p className=\"timestamp\">9 Mar 2023 â€¢ 10:10 AM</p>\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input type=\"text\" placeholder=\"Here's the sample text for sample work\" />\r\n        <button>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,CAAC;EAEjC,oBACEE,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BL,OAAA;MAAKI,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBL,OAAA;QAAAK,QAAA,EAAKF;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBL,OAAA;QAAAK,QAAA,EAAG;MAOH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJT,OAAA;QAAGI,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBL,OAAA;QAAOU,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAwC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1ET,OAAA;QAAAK,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CAzBID,YAAY;EAAA,QACMH,SAAS;AAAA;AAAAc,EAAA,GAD3BX,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}